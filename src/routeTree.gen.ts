/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SigninRouteImport } from './routes/signin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as BoardsIndexRouteImport } from './routes/boards/index'
import { Route as BoardsBoardIdRouteImport } from './routes/boards/$boardId'
import { Route as BoardsEditBoardIdRouteImport } from './routes/boards/edit.$boardId'

const TasksAddLazyRouteImport = createFileRoute('/tasks/add')()
const BoardsAddLazyRouteImport = createFileRoute('/boards/add')()
const TasksEditTaskIdLazyRouteImport = createFileRoute('/tasks/edit/$taskId')()

const SigninRoute = SigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BoardsIndexRoute = BoardsIndexRouteImport.update({
  id: '/boards/',
  path: '/boards/',
  getParentRoute: () => rootRouteImport,
} as any)
const TasksAddLazyRoute = TasksAddLazyRouteImport.update({
  id: '/tasks/add',
  path: '/tasks/add',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/tasks/add.lazy').then((d) => d.Route))
const BoardsAddLazyRoute = BoardsAddLazyRouteImport.update({
  id: '/boards/add',
  path: '/boards/add',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/boards/add.lazy').then((d) => d.Route))
const BoardsBoardIdRoute = BoardsBoardIdRouteImport.update({
  id: '/boards/$boardId',
  path: '/boards/$boardId',
  getParentRoute: () => rootRouteImport,
} as any)
const TasksEditTaskIdLazyRoute = TasksEditTaskIdLazyRouteImport.update({
  id: '/tasks/edit/$taskId',
  path: '/tasks/edit/$taskId',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/tasks/edit.$taskId.lazy').then((d) => d.Route),
)
const BoardsEditBoardIdRoute = BoardsEditBoardIdRouteImport.update({
  id: '/boards/edit/$boardId',
  path: '/boards/edit/$boardId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/signin': typeof SigninRoute
  '/boards/$boardId': typeof BoardsBoardIdRoute
  '/boards/add': typeof BoardsAddLazyRoute
  '/tasks/add': typeof TasksAddLazyRoute
  '/boards': typeof BoardsIndexRoute
  '/boards/edit/$boardId': typeof BoardsEditBoardIdRoute
  '/tasks/edit/$taskId': typeof TasksEditTaskIdLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/signin': typeof SigninRoute
  '/boards/$boardId': typeof BoardsBoardIdRoute
  '/boards/add': typeof BoardsAddLazyRoute
  '/tasks/add': typeof TasksAddLazyRoute
  '/boards': typeof BoardsIndexRoute
  '/boards/edit/$boardId': typeof BoardsEditBoardIdRoute
  '/tasks/edit/$taskId': typeof TasksEditTaskIdLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/signin': typeof SigninRoute
  '/boards/$boardId': typeof BoardsBoardIdRoute
  '/boards/add': typeof BoardsAddLazyRoute
  '/tasks/add': typeof TasksAddLazyRoute
  '/boards/': typeof BoardsIndexRoute
  '/boards/edit/$boardId': typeof BoardsEditBoardIdRoute
  '/tasks/edit/$taskId': typeof TasksEditTaskIdLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/signin'
    | '/boards/$boardId'
    | '/boards/add'
    | '/tasks/add'
    | '/boards'
    | '/boards/edit/$boardId'
    | '/tasks/edit/$taskId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/signin'
    | '/boards/$boardId'
    | '/boards/add'
    | '/tasks/add'
    | '/boards'
    | '/boards/edit/$boardId'
    | '/tasks/edit/$taskId'
  id:
    | '__root__'
    | '/'
    | '/signin'
    | '/boards/$boardId'
    | '/boards/add'
    | '/tasks/add'
    | '/boards/'
    | '/boards/edit/$boardId'
    | '/tasks/edit/$taskId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SigninRoute: typeof SigninRoute
  BoardsBoardIdRoute: typeof BoardsBoardIdRoute
  BoardsAddLazyRoute: typeof BoardsAddLazyRoute
  TasksAddLazyRoute: typeof TasksAddLazyRoute
  BoardsIndexRoute: typeof BoardsIndexRoute
  BoardsEditBoardIdRoute: typeof BoardsEditBoardIdRoute
  TasksEditTaskIdLazyRoute: typeof TasksEditTaskIdLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/boards/': {
      id: '/boards/'
      path: '/boards'
      fullPath: '/boards'
      preLoaderRoute: typeof BoardsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks/add': {
      id: '/tasks/add'
      path: '/tasks/add'
      fullPath: '/tasks/add'
      preLoaderRoute: typeof TasksAddLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/boards/add': {
      id: '/boards/add'
      path: '/boards/add'
      fullPath: '/boards/add'
      preLoaderRoute: typeof BoardsAddLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/boards/$boardId': {
      id: '/boards/$boardId'
      path: '/boards/$boardId'
      fullPath: '/boards/$boardId'
      preLoaderRoute: typeof BoardsBoardIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks/edit/$taskId': {
      id: '/tasks/edit/$taskId'
      path: '/tasks/edit/$taskId'
      fullPath: '/tasks/edit/$taskId'
      preLoaderRoute: typeof TasksEditTaskIdLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/boards/edit/$boardId': {
      id: '/boards/edit/$boardId'
      path: '/boards/edit/$boardId'
      fullPath: '/boards/edit/$boardId'
      preLoaderRoute: typeof BoardsEditBoardIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SigninRoute: SigninRoute,
  BoardsBoardIdRoute: BoardsBoardIdRoute,
  BoardsAddLazyRoute: BoardsAddLazyRoute,
  TasksAddLazyRoute: TasksAddLazyRoute,
  BoardsIndexRoute: BoardsIndexRoute,
  BoardsEditBoardIdRoute: BoardsEditBoardIdRoute,
  TasksEditTaskIdLazyRoute: TasksEditTaskIdLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
